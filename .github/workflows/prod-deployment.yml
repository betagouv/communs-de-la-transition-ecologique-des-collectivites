name: Production Deployment

# Manual trigger with a button in GitHub interface
on:
  workflow_dispatch:

defaults:
  run:
    working-directory: api

jobs:
  release-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ssh-key: ${{ secrets.SCALINGO_BETA_GOUV_SSH_PRIVATE_KEY }} # needed to bypass protection rules on main branch as per

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install pnpm
        shell: bash
        run: npm install -g pnpm@latest

      - name: Install dependencies
        run: pnpm install

      - name: Configure Git #change the user/email
        run: |
          git config user.name "GitHub Actions Bot"
          git config user.email "actions@github.com"

      - name: Generate new version
        run: HUSKY=0 pnpm run release #do not need precommit check there

      - name: Push changes and tags
        run: |
          git push --follow-tags origin main

      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SCALINGO_BETA_GOUV_SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          # Explicitly scan for all key types and show output for debugging
          ssh-keyscan -H -t rsa,ecdsa,ed25519 ssh.osc-fr1.scalingo.com >> ~/.ssh/known_hosts
          # Show what keys were actually stored
          ssh-keygen -l -f ~/.ssh/known_hosts

      - name: Deploy to Scalingo Production
        run: |
          # Add verbose flag to see more details about the SSH connection
          GIT_SSH_COMMAND="ssh -v" git push git@ssh.osc-fr1.scalingo.com:les-communs-transition-ecologique-api-prod.git main