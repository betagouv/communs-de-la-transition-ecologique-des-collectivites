name: Staging Deployment

on:
  push:
    branches: [main]

  pull_request:
    branches: [main]


defaults:
  run:
    working-directory: api

jobs:
  lint-test-typecheck: #might split the steps once the tests become heavier
    runs-on: ubuntu-latest

    # those services are used by unit tests job, the integrated/e2e test have their own docker-compose file
    # this should be improved for a better isolation either through specific workflow or by having the integrated test having their own
    # docker compos
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      redis:
        image: redis:alpine
        ports:
          - "6379:6379"
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v6
        with:
          node-version: '22'

      - name: Install pnpm
        shell: bash
        run: npm install -g pnpm@10.0.0

      - name: Install dependencies
        run: pnpm install

      - name: Run linter
        run: pnpm run lint

      - name: Type check
        run: pnpm run type-check

      - name: Run database migrations
        run: pnpm run db:migrate:drizzle
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/test_db

      - name: Unit, Integration, E2E tests
        run: pnpm run test:ci
        env:
          NODE_OPTIONS: "--max-old-space-size=4096"
          MEC_API_KEY: ${{ secrets.MEC_API_KEY }}
          TET_API_KEY: ${{ secrets.TET_API_KEY }}
          RECOCO_API_KEY: ${{ secrets.RECOCO_API_KEY }}
          URBAN_VITALIZ_API_KEY: ${{ secrets.URBAN_VITALIZ_API_KEY }}
          SOS_PONTS_API_KEY: ${{ secrets.SOS_PONTS_API_KEY }}
          FOND_VERT_API_KEY: ${{ secrets.FOND_VERT_API_KEY }}
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
          SERVICE_MANAGEMENT_API_KEY: ${{ secrets.SERVICE_MANAGEMENT_API_KEY }}
          DATABASE_URL: postgres://postgres:mypassword@localhost:5433/e2e_test_db
          REDIS_URL: redis://localhost:6380
          QUEUE_BOARD_PWD: AdminIsWatchingYou


  deploy-staging:
    needs: lint-test-typecheck
    runs-on: ubuntu-latest
    if: github.event_name == 'push' # Only deploy when the PR is merged

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SCALINGO_BETA_GOUV_SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ssh.osc-fr1.scalingo.com >> ~/.ssh/known_hosts

      - name: Deploy to Scalingo (Staging)
        run: |
          # Push the staging branch to Scalingo's main branch
          git push git@ssh.osc-fr1.scalingo.com:les-communs-transition-ecologique-api-staging.git main
